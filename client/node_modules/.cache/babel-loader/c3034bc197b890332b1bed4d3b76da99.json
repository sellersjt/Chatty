{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jt\\\\Desktop\\\\ElevenFiftyProjects\\\\DotNetProjects\\\\Chatty\\\\client\\\\src\\\\Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { HubConnectionBuilder } from \"@microsoft/signalr\";\nimport ChatWindow from \"./ChatWindow\";\nimport ChatInput from \"./ChatInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chat = () => {\n  _s();\n\n  const [chat, setChat] = useState([]);\n  const latestChat = useRef(null);\n  latestChat.current = chat;\n  useEffect(() => {\n    const connection = new HubConnectionBuilder().withUrl(\"https://localhost:5001/hubs/chat\").withAutomaticReconnect().build();\n    connection.start().then(result => {\n      console.log(\"Connected!\");\n      connection.on(\"ReceiveMessage\", message => {\n        const updatedChat = [...latestChat.current];\n        updatedChat.push(message);\n        setChat(updatedChat);\n      });\n    }).catch(e => console.log(\"Connection failed: \", e));\n  }, []);\n\n  const sendMessage = async (user, message) => {\n    const chatMessage = {\n      user: user,\n      message: message\n    };\n\n    try {\n      await fetch(\"https://localhost:44326/api/chat/messages\", {\n        method: \"POST\",\n        body: JSON.stringify(chatMessage),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n    } catch (e) {\n      console.log(\"Sending message failed.\", e);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ChatInput, {\n      sendMessage: sendMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatWindow, {\n      chat: chat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chat, \"gZAQVTB1OTI7AyptrvjNeHj7GDE=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["C:/Users/jt/Desktop/ElevenFiftyProjects/DotNetProjects/Chatty/client/src/Chat.js"],"names":["React","useState","useEffect","useRef","HubConnectionBuilder","ChatWindow","ChatInput","Chat","chat","setChat","latestChat","current","connection","withUrl","withAutomaticReconnect","build","start","then","result","console","log","on","message","updatedChat","push","catch","e","sendMessage","user","chatMessage","fetch","method","body","JSON","stringify","headers"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SAASC,oBAAT,QAAqC,oBAArC;AAEA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMS,UAAU,GAAGP,MAAM,CAAC,IAAD,CAAzB;AAEAO,EAAAA,UAAU,CAACC,OAAX,GAAqBH,IAArB;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,UAAU,GAAG,IAAIR,oBAAJ,GAChBS,OADgB,CACR,kCADQ,EAEhBC,sBAFgB,GAGhBC,KAHgB,EAAnB;AAKAH,IAAAA,UAAU,CACPI,KADH,GAEGC,IAFH,CAESC,MAAD,IAAY;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AAEAR,MAAAA,UAAU,CAACS,EAAX,CAAc,gBAAd,EAAiCC,OAAD,IAAa;AAC3C,cAAMC,WAAW,GAAG,CAAC,GAAGb,UAAU,CAACC,OAAf,CAApB;AACAY,QAAAA,WAAW,CAACC,IAAZ,CAAiBF,OAAjB;AAEAb,QAAAA,OAAO,CAACc,WAAD,CAAP;AACD,OALD;AAMD,KAXH,EAYGE,KAZH,CAYUC,CAAD,IAAOP,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCM,CAAnC,CAZhB;AAaD,GAnBQ,EAmBN,EAnBM,CAAT;;AAqBA,QAAMC,WAAW,GAAG,OAAOC,IAAP,EAAaN,OAAb,KAAyB;AAC3C,UAAMO,WAAW,GAAG;AAClBD,MAAAA,IAAI,EAAEA,IADY;AAElBN,MAAAA,OAAO,EAAEA;AAFS,KAApB;;AAKA,QAAI;AACF,YAAMQ,KAAK,CAAC,2CAAD,EAA8C;AACvDC,QAAAA,MAAM,EAAE,MAD+C;AAEvDC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,WAAf,CAFiD;AAGvDM,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AAH8C,OAA9C,CAAX;AAOD,KARD,CAQE,OAAOT,CAAP,EAAU;AACVP,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCM,CAAvC;AACD;AACF,GAjBD;;AAmBA,sBACE;AAAA,4BACE,QAAC,SAAD;AAAW,MAAA,WAAW,EAAEC;AAAxB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,UAAD;AAAY,MAAA,IAAI,EAAEnB;AAAlB;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CArDD;;GAAMD,I;;KAAAA,I;AAuDN,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { HubConnectionBuilder } from \"@microsoft/signalr\";\r\n\r\nimport ChatWindow from \"./ChatWindow\";\r\nimport ChatInput from \"./ChatInput\";\r\n\r\nconst Chat = () => {\r\n  const [chat, setChat] = useState([]);\r\n  const latestChat = useRef(null);\r\n\r\n  latestChat.current = chat;\r\n\r\n  useEffect(() => {\r\n    const connection = new HubConnectionBuilder()\r\n      .withUrl(\"https://localhost:5001/hubs/chat\")\r\n      .withAutomaticReconnect()\r\n      .build();\r\n\r\n    connection\r\n      .start()\r\n      .then((result) => {\r\n        console.log(\"Connected!\");\r\n\r\n        connection.on(\"ReceiveMessage\", (message) => {\r\n          const updatedChat = [...latestChat.current];\r\n          updatedChat.push(message);\r\n\r\n          setChat(updatedChat);\r\n        });\r\n      })\r\n      .catch((e) => console.log(\"Connection failed: \", e));\r\n  }, []);\r\n\r\n  const sendMessage = async (user, message) => {\r\n    const chatMessage = {\r\n      user: user,\r\n      message: message,\r\n    };\r\n\r\n    try {\r\n      await fetch(\"https://localhost:44326/api/chat/messages\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(chatMessage),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n    } catch (e) {\r\n      console.log(\"Sending message failed.\", e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ChatInput sendMessage={sendMessage} />\r\n      <hr />\r\n      <ChatWindow chat={chat} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n"]},"metadata":{},"sourceType":"module"}