{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jt\\\\Desktop\\\\ElevenFiftyProjects\\\\DotNetProjects\\\\Chatty\\\\client\\\\src\\\\Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { HubConnectionBuilder } from \"@microsoft/signalr\";\nimport ChatWindow from \"./ChatWindow/ChatWindow\";\nimport ChatInput from \"./ChatInput/ChatInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chat = () => {\n  _s();\n\n  const [connection, setConnection] = useState(null);\n  const [chat, setChat] = useState([]);\n  const latestChat = useRef(null);\n  latestChat.current = chat;\n  useEffect(() => {\n    const newConnection = new HubConnectionBuilder().withUrl(\"https://localhost:5001/hubs/chat\").withAutomaticReconnect().build();\n    setConnection(newConnection);\n  }, []);\n  useEffect(() => {\n    if (connection) {\n      connection.start().then(result => {\n        console.log(\"Connected!\");\n        connection.on(\"ReceiveMessage\", message => {\n          const updatedChat = [...latestChat.current];\n          updatedChat.push(message);\n          setChat(updatedChat);\n        });\n      }).catch(e => console.log(\"Connection failed: \", e));\n    }\n  }, [connection]);\n\n  const sendMessage = async (user, message) => {\n    const chatMessage = {\n      user: user,\n      message: message\n    };\n\n    if (connection.connectionStarted) {\n      try {\n        await connection.send(\"SendMessage\", chatMessage);\n      } catch (e) {\n        console.log(e);\n      }\n    } else {\n      alert(\"No connection to server yet.\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ChatInput, {\n      sendMessage: sendMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatWindow, {\n      chat: chat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chat, \"Nt/VzBfbW5N40WZ63bjafp0zHzQ=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["C:/Users/jt/Desktop/ElevenFiftyProjects/DotNetProjects/Chatty/client/src/Chat.js"],"names":["React","useState","useEffect","useRef","HubConnectionBuilder","ChatWindow","ChatInput","Chat","connection","setConnection","chat","setChat","latestChat","current","newConnection","withUrl","withAutomaticReconnect","build","start","then","result","console","log","on","message","updatedChat","push","catch","e","sendMessage","user","chatMessage","connectionStarted","send","alert"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SAASC,oBAAT,QAAqC,oBAArC;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMW,UAAU,GAAGT,MAAM,CAAC,IAAD,CAAzB;AAEAS,EAAAA,UAAU,CAACC,OAAX,GAAqBH,IAArB;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,aAAa,GAAG,IAAIV,oBAAJ,GACnBW,OADmB,CACX,kCADW,EAEnBC,sBAFmB,GAGnBC,KAHmB,EAAtB;AAKAR,IAAAA,aAAa,CAACK,aAAD,CAAb;AACD,GAPQ,EAON,EAPM,CAAT;AASAZ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,UAAJ,EAAgB;AACdA,MAAAA,UAAU,CACPU,KADH,GAEGC,IAFH,CAESC,MAAD,IAAY;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AAEAd,QAAAA,UAAU,CAACe,EAAX,CAAc,gBAAd,EAAiCC,OAAD,IAAa;AAC3C,gBAAMC,WAAW,GAAG,CAAC,GAAGb,UAAU,CAACC,OAAf,CAApB;AACAY,UAAAA,WAAW,CAACC,IAAZ,CAAiBF,OAAjB;AAEAb,UAAAA,OAAO,CAACc,WAAD,CAAP;AACD,SALD;AAMD,OAXH,EAYGE,KAZH,CAYUC,CAAD,IAAOP,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCM,CAAnC,CAZhB;AAaD;AACF,GAhBQ,EAgBN,CAACpB,UAAD,CAhBM,CAAT;;AAkBA,QAAMqB,WAAW,GAAG,OAAOC,IAAP,EAAaN,OAAb,KAAyB;AAC3C,UAAMO,WAAW,GAAG;AAClBD,MAAAA,IAAI,EAAEA,IADY;AAElBN,MAAAA,OAAO,EAAEA;AAFS,KAApB;;AAKA,QAAIhB,UAAU,CAACwB,iBAAf,EAAkC;AAChC,UAAI;AACF,cAAMxB,UAAU,CAACyB,IAAX,CAAgB,aAAhB,EAA+BF,WAA/B,CAAN;AACD,OAFD,CAEE,OAAOH,CAAP,EAAU;AACVP,QAAAA,OAAO,CAACC,GAAR,CAAYM,CAAZ;AACD;AACF,KAND,MAMO;AACLM,MAAAA,KAAK,CAAC,8BAAD,CAAL;AACD;AACF,GAfD;;AAiBA,sBACE;AAAA,4BACE,QAAC,SAAD;AAAW,MAAA,WAAW,EAAEL;AAAxB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,UAAD;AAAY,MAAA,IAAI,EAAEnB;AAAlB;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CA1DD;;GAAMH,I;;KAAAA,I;AA4DN,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { HubConnectionBuilder } from \"@microsoft/signalr\";\r\n\r\nimport ChatWindow from \"./ChatWindow/ChatWindow\";\r\nimport ChatInput from \"./ChatInput/ChatInput\";\r\n\r\nconst Chat = () => {\r\n  const [connection, setConnection] = useState(null);\r\n  const [chat, setChat] = useState([]);\r\n  const latestChat = useRef(null);\r\n\r\n  latestChat.current = chat;\r\n\r\n  useEffect(() => {\r\n    const newConnection = new HubConnectionBuilder()\r\n      .withUrl(\"https://localhost:5001/hubs/chat\")\r\n      .withAutomaticReconnect()\r\n      .build();\r\n\r\n    setConnection(newConnection);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (connection) {\r\n      connection\r\n        .start()\r\n        .then((result) => {\r\n          console.log(\"Connected!\");\r\n\r\n          connection.on(\"ReceiveMessage\", (message) => {\r\n            const updatedChat = [...latestChat.current];\r\n            updatedChat.push(message);\r\n\r\n            setChat(updatedChat);\r\n          });\r\n        })\r\n        .catch((e) => console.log(\"Connection failed: \", e));\r\n    }\r\n  }, [connection]);\r\n\r\n  const sendMessage = async (user, message) => {\r\n    const chatMessage = {\r\n      user: user,\r\n      message: message,\r\n    };\r\n\r\n    if (connection.connectionStarted) {\r\n      try {\r\n        await connection.send(\"SendMessage\", chatMessage);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    } else {\r\n      alert(\"No connection to server yet.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ChatInput sendMessage={sendMessage} />\r\n      <hr />\r\n      <ChatWindow chat={chat} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n"]},"metadata":{},"sourceType":"module"}